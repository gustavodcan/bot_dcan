import re, logging

logger = logging.getLogger(__name__)

def extrair_dados_cliente_rio_das_pedras(img, texto):
    logger.debug("üìú [RIO DAS PEDRAS] Texto detectado:")
    logger.debug(texto)

    nota_val = "N√ÉO ENCONTRADO"
    peso_liquido_val = "N√ÉO ENCONTRADO"

    linhas = texto.lower().splitlines()

    # üßæ Buscar n√∫mero na linha que cont√©m 'notas fiscais'
    for linha in linhas:
        if "notas fiscais" in linha:
            match_nf = re.search(r"\b(\d{6,})\b", linha)
            if match_nf:
                nota_val = match_nf.group(1)
                logger.debug(f"Nota fiscal encontrada: {nota_val}")
                break

    # ‚öñÔ∏è Peso l√≠quido ‚Äî aceita "l√≠quidouido", "l√≠quldo", etc mesmo sem "peso" antes
    for linha in linhas:
        if re.search(r"l[i√≠1!|][qg][u√∫√º][i√≠1!|][d0o][a-z]*[:Ôºö-]*", linha):
            logger.debug(f"[üëÅÔ∏è] Linha suspeita de peso l√≠quido: {linha}")
            match_peso = re.search(r"(\d{1,3}(?:[.,]\d{3}){1,2})\s*kg", linha)
            if match_peso:
                peso_raw = match_peso.group(1)
                logger.debug(f"[‚öñÔ∏è] Peso capturado: {peso_raw}")
                try:
                    peso_limpo = peso_raw.replace(".", "").replace(",", "")
                    peso_liquido_val = str(int(peso_limpo))
                    logger.debug(f"[‚úÖ] Peso l√≠quido final: {peso_liquido_val}")
                except Exception as e:
                    logger.debug(f"[‚ùå] Erro ao converter peso: {e}")
                    peso_liquido_val = "N√ÉO ENCONTRADO"
                break

    logger.debug("üéØ Dados extra√≠dos:")
    logger.debug(f"Nota Fiscal: {nota_val}")
    logger.debug(f"Peso L√≠quido: {peso_liquido_val}")

    return {
        "nota_fiscal": nota_val,
        "peso_liquido": peso_liquido_val,
        "ticket": "N/A"
    }
